//--------------------------------------------------------------------------------------
// Class constructor
//--------------------------------------------------------------------------------------
Cache::Cache(void)
{
  hitCount = 0;        //number of cache hits
  hitMCount = 0;       //number of cache hitMs
  missCount = 0;       //number of cache miss
  cacheReadCount = 0;  //number of cache reads
  cacheWriteCount = 0; //number of cache writes
  accessCount = 0;     //number of cache access

  for(int i=0;i<8192;i++)
  {
    c_index[i]=0;
  }
}

//--------------------------------------------------------------------------------------
// Class destructor
//--------------------------------------------------------------------------------------
Cache::~Cache(void)
{
  if(accessCount) //make sure we don't divide by 0
  {
    //equation for cache hit ratio
    cacheHitRatio = 100*((float)(hitCount+hitMCount)/(float)(accessCount));

    //print out brief summary 
    cout << "-----------PDP-8 ISA Simulation Summary---------------\n\n";
    //TODO: Add the +1 to numInstr for every instruction
    cout << "Total number of Instructions executed: " << numInstr << "\n";
    //TODO: Add correct amount of clock cycles to each function
    cout << "Total number of clock cycles consumed: " << numClk << "\n\n";
    cout << "**Number of times each instruction type was executed**\n"
    //TODO: Add variable to each function to hold count
    cout << "|-----------------------------------------------------\n";
    cout << "|    Mnemonic   | Number of times executed            \n";
    cout << "|-----------------------------------------------------\n";
    cout << "|      AND      |       " << 
    cout << "|      TAD      |       " <<
    cout << "|      ISZ      |       " <<
    cout << "|      DCA      |       " <<
    cout << "|      JMS      |       " <<
    cout << "|      JMP      |       " <<
    cout << "|     <IO>      |       " <<
    cout << "| uInstructions |       " <<
    cout << "------------------------------------------------------\n";
  }


